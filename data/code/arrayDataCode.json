{
    "array": [
        { 
            "createArrFunctionId": "// JavaScript code here\nfunction bubbleSort(arr){\n    const n = arr.length;\n    let swapped;\n    do {\n        swapped = false; \n        let count = 0;\n        for(let i = 0; i < n-1 ; i++){\n            if(arr[i] > arr[i +1] ){\n                [arr[i], arr[i + 1] ] = [ arr[i+1], arr[i] ];\n                swapped = true;\n                console.log(swapped);\n                console.log(arr[i]);\n            }\n            count++;\n        }\n        console.log(count, \"count\");\n    } while(swapped);\n    console.log(arr, \"arr\");\n    return arr;\n}"
        }
    ],
    "arrayMethods": [
        { 
            "arrMethodsLengthFunctionId": "// JavaScript code here\n\nfunction arrMethodsLength() {\n    const data = document.getElementById(\"arrMethodsLengthValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsLengthIdResult\");\n    let stringToArr = data.split(\" \");\n    let arrLength = stringToArr.length;\n\n    showResult.innerHTML = `Le tableau créé à partir de vos données : [${stringToArr}] . </br>\n     Sa longueur : ${arrLength}. `;\n}"
        },
        { 
            "arrMethodsToStringFunctionId": "// JavaScript code here\n\nfunction arrMethodsToString() {\n    const data = document.getElementById(\"arrMethodsToStringValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsToStringIdResult\");\n    let stringToArr = data.split(\" \");\n    let arrString =  stringToArr.toString();\n\n    showResult.innerHTML = `Le tableau créé à partir de vos données : [${stringToArr}] . </br>\n     Converti en string : ${arrString}. `;\n}"
        },
        { 
            "arrMethodsArrayAtFunctionId": "// JavaScript code here\n\nfunction arrMethodsArrayAt() {\n    const data = document.getElementById(\"arrMethodsArrayAtValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsArrayAtIdResult\");\n    let arr = [\"cacao\", \"banane\", \"lait\", \"vanille\"];\n    let errorMsg = \"error you need a number\";\n    let validNumber = (isNaN((Number(data))) ? errorMsg : arr.at((Number(data))));\n    let arrAt = validNumber;\n\n    showResult.innerHTML = `Le tableau de base : [${arr}] . </br>\n     Votre sélection : ${arrAt}. `;\n}"
        },
        { 
            "arrMethodsJoinFunctionId": "// JavaScript code here\n\nfunction arrMethodsJoin() {\n    const data = document.getElementById(\"arrMethodsJoinValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsJoinIdResult\");\n    let arr = [\"cacao\", \"banane\", \"lait\", \"vanille\"];\n    let arrJoin =  arr.join(data);\n\n    showResult.innerHTML = `Le tableau de base : [${arr}] . </br>\n     Le tableau coller avec ce que vous avez selecitonner : ${arrJoin}. `;\n}"
        },
        { 
            "arrMethodsPopFunctionId": "// JavaScript code here\n\nfunction arrMethodsPop() {\n    const data = document.getElementById(\"arrMethodsPopValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsPopIdResult\");\n    let arr = [\"cacao\", \"banane\", \"lait\", \"vanille\"];\n    let arrPop =  arr.pop();\n\n    showResult.innerHTML = `Le tableau de base : [${arr}] . </br>\n     Le dernier élément supprimé : ${arrPop}. </br>\n     Le tableau après suppression du dernier élément : [${arr}] `;\n}"
        },
        { 
            "arrMethodsPushFunctionId": "function arrMethodsPush() {\n    const data = document.getElementById(\"arrMethodsPushValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsPushIdResult\");\n    let arr = [\"cacao\", \"banane\", \"lait\", \"vanille\"];\n    let arrPush =  arr.push(data);\n\n    showResult.innerHTML = `Le tableau de base : [${arr}] . </br>\n     La place dans le tableau du dernier élément ajouté : ${arrPush}. </br>\n     Le tableau avec l'élément ajouté : [${arr}] `;\n}"
        },
        { 
            "arrMethodsShiftFunctionId": "// JavaScript code here\n\nfunction arrMethodsPop() {\n    const data = document.getElementById(\"arrMethodsShiftValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsShiftIdResult\");\n    let arr = [\"cacao\", \"banane\", \"lait\", \"vanille\"];\n    let arrCopy = [...arr];\n    let arrShift =  arr.shift();\n\n    showResult.innerHTML = `Le tableau de base : [${arrCopy}] . </br>\n     L'élément supprimé : ${arrShift}. </br>\n     Le tableau avec l'élément supprimé : [${arr}] `\n}"
        },
        { 
            "arrMethodsUnShiftFunctionId": "// JavaScript code here\n\nfunction arrMethodsUnShift() {\n    const data = document.getElementById(\"arrMethodsUnShiftValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsUnShiftIdResult\");\n    let arr = [\"cacao\", \"banane\", \"lait\", \"vanille\"];\n    let arrCopy = [...arr];\n    let arrUnshift =  arr.unshift(data);\n\n    showResult.innerHTML = `Le tableau de base : [${arrCopy}] . </br>\n     Unshift retourne la taille du nouveau tableau: ${arrUnshift}. </br>\n     Le tableau avec l'élément ajouté : [${arr}] `\n}"
        },
        {
            "arrMethodsConcatFunctionId": "// JavaScript code here\n\nfunction arrMethodsConcat() {\n    const data = document.getElementById(\"arrMethodsConcatValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsConcatIdResult\");\n    let arr = [\"cacao\", \"banane\", \"lait\", \"vanille\"];\n    let dataArr = data.split(\" \");\n    let arrConcat =  arr.concat(dataArr);\n\n    showResult.innerHTML = `Le tableau de base : [${arr}] . </br>\n     Vôtre tableau: ${dataArr}. </br>\n     Les tableaux concaténés : [${arrConcat}] `\n}"
        },
        {
            "arrMethodscopyWithinFunctionId": "// JavaScript code here\n\nfunction arrMethodscopyWithin() {\n    const data = document.getElementById(\"arrMethodscopyWithinValueId\").value;\n    const showResult = document.getElementById(\"arrMethodscopyWithinIdResult\");\n    let arr = [\"cacao\", \"banane\", \"lait\", \"vanille\"];\n    let errorMsg = \"error, we need a number, inferior of the array length.\";\n    let dataIsNumber = (isNaN(Number(data)))? errorMsg : (Number(data));\n    let arrCopyWithin = (dataIsNumber < arr.length)? (arr.copyWithin(0,dataIsNumber)) : errorMsg;\n\n    showResult.innerHTML = `Le tableau de base : [${arr}] . </br>\n     Vôtre tableau: ${arrCopyWithin}. </br>\n     Les tableaux concaténés : [${arrCopyWithin}] `\n}"
        },
        {
            "arrMethodArrayflatFunctionId": "// JavaScript code here\n\nfunction arrMethodArrayflat() {\n    const data = document.getElementById(\"arrMethodArrayflatValueId\").value;\n    const showResult = document.getElementById(\"arrMethodArrayflatIdResult\");\n    let arr = [\"cacao\", [\"banane\", \"lait\"], \"vanille\"];\n    let arrFlat =  arr.flat();\n\n    showResult.innerHTML = `Le tableau de base : [\"cacao\", [\"banane\", \"lait\"], \"vanille\"] . </br>\n     Le tableau une fois unifié à un niveau: [${arrFlat}]. `\n}"
        },
        {
            "arrMethodsSpliceFunctionId": "// JavaScript code here\n\nfunction arrMethodsSplice() {\n    const data = document.getElementById(\"arrMethodsSpliceValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsSpliceIdResult\");\n    let arr = [\"cacao\", \"banane\", \"lait\", \"vanille\"];\n    let arrCopy = Array.from(arr);\n    let arrSplice =  arr.splice(2, 2, data);\n\n    showResult.innerHTML = `Le tableau de base : [${arrCopy}] . </br>\n    Le tableau modifié : [${arr}] . </br>\n     Les éléments supprimés: ${arrSplice}. `\n}"
        },
        {
            "arrMethodsToSplicedFunctionId": "// JavaScript code here\n\nfunction arrMethodsToSpliced() {\n    const data = document.getElementById(\"arrMethodsToSplicedValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsToSplicedIdResult\");\n    let arr = [\"cacao\", \"banane\", \"lait\", \"vanille\"];\n    let arrSplice =  arr.toSpliced(2, 2, data);\n\n    showResult.innerHTML = `Le tableau de base : [${arr}] . </br>\n    Le tableau modifié : [${arrSplice}] . `\n}"
        },
        {
            "arrMethodsSliceFunctionId": "// JavaScript code here\n\nfunction arrMethodsSlice() {\n    const data = document.getElementById(\"arrMethodsSliceValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsSliceIdResult\");\n    let arr = [\"cacao\", \"banane\", \"lait\", \"vanille\"];\n    let errorMsg = \"Please type a number, under the max length of the array.\";\n    let dataNumber = Number(data);\n    let arrSlice;\n    if (dataNumber && dataNumber <= arr.length - 1) {\n        arrSlice = arr.slice(dataNumber);\n    }\n    else {\n        arrSlice = errorMsg;\n    }\n    showResult.innerHTML = `Le tableau de base : [${arr}] . </br>\n    Le tableau modifié : [${arrSlice}] . `;\n}"
        }
    ],
    "arraySearchMethods": [
        { 
            "arrMethodsIndexOfFunctionId": "// JavaScript code here\n\nfunction arrMethodsindexOf() {\n    const data = document.getElementById(\"arrMethodsindexOfValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsindexOfIdResult\");\n    let arr = [\"Apple\", \"Orange\", \"Apple\", \"Mango\"];\n    \n    let result = arr.indexOf(data);\n    if(result === -1){\n        result = \"the element is not present in the table\"\n    }\n    showResult.innerHTML = `The index of the element is : ${result} . `\n}"        },
        {
            "arrMethodslastIndexOfFunctionId": "// JavaScript code here\n\nfunction arrMethodslastIndexOf() {\n    const data = document.getElementById(\"arrMethodslastIndexOfValueId\").value;\n    const showResult = document.getElementById(\"arrMethodslastIndexOfIdResult\");\n    let arr = [\"Apple\", \"Orange\", \"Apple\", \"Mango\", \"Orange\"];\n    \n    let result = arr.lastIndexOf(data);\n    if(result === -1){\n        result = \"the element is not present in the table\"\n    }\n    showResult.innerHTML = `The index of the element is : ${result} . `\n}"
        },
        {
            "arrMethodsIncludesFunctionId": "// JavaScript code here\n\nfunction arrMethodsIncludes() {\n    const data = document.getElementById(\"arrMethodsIncludesValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsIncludesIdResult\");\n    let arr = [\"Apple\", \"Orange\", \"Apple\", \"Mango\", \"Orange\"];\n    let result = \"\";\n\n    let search = arr.includes(data);\n    if(search){\n        result = \"The element is present in the table\";\n    }\n    else {\n        result = \"The element is not present in the table\";\n    }\n    showResult.innerHTML = ` ${result} . `\n}"
        },
        {
            "arrMethodsFindFunctionId": "// JavaScript code here\n\nfunction arrMethodsFind() {\n    const data = document.getElementById(\"arrMethodsFindValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsFindIdResult\");\n    let arr =  [4, 9, 16, 25, 29];\n    let result = \"\";\n    let search;\n    function moreThanData(value, index, array) {\n        return value > data;\n      }\n    if(Number(data)){\n        search = arr.find(moreThanData);\n        result = `The number you have typed: ${data}. </br>\n                  The number greater than that: ${search} `;\n    }\n    else {\n        result = \"The element is not present in the table\";\n    }\n    showResult.innerHTML = ` ${result}. `\n}"
        },
        {
            "arrMethodsfindIndexFunctionId": "// JavaScript code here\n\nfunction arrMethodsfindIndex() {\n    const data = document.getElementById(\"arrMethodsfindIndexValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsfindIndexIdResult\");\n    let arr =  [4, 9, 16, 25, 29];\n    let result = \"\";\n    let search;\n    function moreThanData(value, index, array) {\n        return value > data;\n      }\n    if(Number(data)){\n        search = arr.findIndex(moreThanData);\n        result = `The number you have typed: ${data}. </br>\n                  The index of number greater than that: ${search} `;\n    }\n    else {\n        result = \"The element is not present in the table\";\n    }\n    showResult.innerHTML = ` ${result}. `\n}"
        },
        {
            "arrMethodsindLastFunctionId": "// JavaScript code here\n\nfunction arrMethodsindLast() {\n    const data = document.getElementById(\"arrMethodsindLastValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsindLastIdResult\");\n    let arr =  [27, 28, 30, 40, 42, 35, 30];\n    let result = \"\";\n    let search;\n   \n    if(Number(data)){\n        search = arr.findLast(x => x > data);\n        result = `The number you have typed: ${data}. </br>\n                  The number greater than that from the end: ${search} `;\n    }\n    else {\n        result = \"The element is not present in the table\";\n    }\n    showResult.innerHTML = ` ${result}. `\n}"
        },
        {
            "arrMethodsindLastIndexFunctionId": "// JavaScript code here\n\nfunction arrMethodsindLastIndex() {\n    const data = document.getElementById(\"arrMethodsindLastIndexValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsindLastIndexIdResult\");\n    let arr =  [27, 28, 30, 40, 42, 35, 30];\n    let result = \"\";\n    let search;\n   \n    if(Number(data)){\n        search = arr.findLastIndex(x => x > data);\n        result = `The number you have typed: ${data}. </br>\n                  The index of number greater than that from the end: ${search} `;\n    }\n    else {\n        result = \"The element is not present in the table\";\n    }\n    showResult.innerHTML = ` ${result}. `\n}"
        }
    ],
    "arraySortMethods": [
        {
            "arrMethodsSortFunctionId": "// JavaScript code here\n\nfunction arrMethodsSort() {\n    const data = document.getElementById(\"arrMethodsSortValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsSortIdResult\");\n    let arr =  [\"Apple\", \"Orange\", \"Apple\", \"Mango\", \"Orange\"];\n    arr.push(data);\n\n    let result = arr.sort();\n    showResult.innerHTML = `The alphabetical sorting array : ${result} . `\n}"
        },
        {
            "arrMethodsReverseFunctionId": "// JavaScript code here\n\nfunction arrMethodsReverse() {\n    const data = document.getElementById(\"arrMethodsReverseValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsReverseIdResult\");\n    let arr =  [\"Apple\", \"Orange\", \"Apple\", \"Mango\", \"Orange\"];\n    arr.push(data);\n    let result = Array.from(arr).reverse();\n    let arrAlphabetOrder = Array.from(arr).sort();\n    let arrInReverseAlphabetOrder = Array.from(arrAlphabetOrder).reverse();\n\n    showResult.innerHTML = `The reverse array with your element : ${result} . </br>\n        The alphabetic sorted array with your element : ${arrAlphabetOrder} </br>\n        The alphabetic reversed array with your element : ${arrInReverseAlphabetOrder} `\n}"
        },
        {
            "arrMethodsToReversedFunctionId": "// JavaScript code here\n\nfunction arrMethodsToReversed() {\n    const data = document.getElementById(\"arrMethodsToReversedValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsToReversedIdResult\");\n    let arr =  [\"Apple\", \"Orange\", \"Apple\", \"Mango\", \"Orange\"];\n    arr.push(data);\n    let result = arr.toReversed();\n\n    showResult.innerHTML = `The reverse array with your element : ${result} . `\n}"
        },
        {
            "arrMethodsNumericSortFunctionId": "// JavaScript code here\n\nfunction arrMethodsNumericSort() {\n    const data = document.getElementById(\"arrMethodsNumericSortValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsNumericSortIdResult\");\n    let arr =  [40, 100, 1, 5, 25, 10];\n    let ascendingOrder = Array.from(arr).sort(function(a, b){ return a - b; });\n    let descendingOrder = Array.from(arr).sort(function(a, b){ return b - a; });\n\n    showResult.innerHTML = `The array  : ${arr} . </br>\n        The array in ascending order : ${ascendingOrder} . </br>\n        The array in descending order : ${descendingOrder} . `\n}"
        },
        {
            "arrMethodsRandomOrderFunctionId": "// JavaScript code here\n\nfunction arrMethodsRandomOrder() {\n    const data = document.getElementById(\"arrMethodsRandomOrderValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsRandomOrderIdResult\");\n    let arr =  [40, 100, 1, 5, 25, 10];\n    let randomOrder = Array.from(arr).sort(function(a, b){ return 0.5 - Math.random(); });\n\n    let arrRealRandom = Array.from(arr);\n    for (let i = arrRealRandom.length; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        let temp = arrRealRandom[i];\n        arrRealRandom[i] = arrRealRandom[j];\n        arrRealRandom[j] = temp;\n    };\n\n    showResult.innerHTML = `The array  : ${arr} . </br>\n        The array in random order : ${randomOrder} .</br>\n        The Fisher Yates random method array  : ${arrRealRandom} . `\n}"
        },
        {
            "arrMethodsMathMinMaxFunctionId": "// JavaScript code here\n\nfunction arrMethodsMathMinMax() {\n    const data = document.getElementById(\"arrMethodsMathMinMaxValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsMathMinMaxIdResult\");\n    let arr =  [40, 100, 1, 5, 25, 10];\n    function mathMinOrMax(methods, arr){\n        return methods.apply(null, arr);\n    }\n    let mathMin = mathMinOrMax(Math.min, arr);\n    let mathMax = mathMinOrMax(Math.max, arr);\n\n    showResult.innerHTML = `The array  : ${arr} . </br>\n        The min value in the array : ${mathMin} . </br>\n        The max value in the array : ${mathMax} . `\n}"
        },
        {
            "arrMethodsHandMadeMinMaxFunctionId": "// JavaScript code here\n\nfunction arrMethodsHandMadeMinMax() {\n    const data = document.getElementById(\"arrMethodsHandMadeMinMaxValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsHandMadeMinMaxIdResult\");\n    let arr =  [40, 100, 1, 5, 25, 10];\n    function handMade(infinity, condition, arr){\n        let len = arr.length;\n        let minOrMax = infinity;\n        while(len--){\n            if(condition(arr[len], minOrMax)){\n               minOrMax = arr[len];\n            }\n        }\n        return minOrMax;\n    }\n    const isSmaller = (a, b) => a < b;\n    const isBigger = (a, b) => a > b;\n    let mathMin = handMade(Infinity, isSmaller, arr);\n    let mathMax = handMade(-Infinity, isBigger, arr);\n\n    showResult.innerHTML = `The array  : ${arr} . </br>\n        The min value in the array : ${mathMin} . </br>\n        The max value in the array : ${mathMax} . `\n}"
        },
        {
            "arrMethodsSortObjectFunctionId": "// JavaScript code here\n\nfunction arrMethodsSortObject() {\n    const data = document.getElementById(\"arrMethodsSortObjectValueId\").value;\n    const showResult = document.getElementById(\"arrMethodsSortObjectIdResult\");\n    let resultOriginal = \"\";\n    let resultSorted = \"\";\n    const cars = [\n        {type:\"Volvo\", year:2016},\n        {type:\"Saab\", year:2001},\n        {type:\"BMW\", year:2010}\n      ];\n    let carsCopy = cars.map(car => ({...car}));\n    carsCopy.sort(function(a,b){\n        let x = a.type.toLowerCase();\n        let y = b.type.toLowerCase();\n        if(x < y){return -1;}\n        if(x > y){return 1;}\n        return 0;\n    });\n    function cleanHtml(value){\n        return value.type + \" \" + value.year + \" | \";\n    }\n    cars.forEach(car =>{\n        resultOriginal += cleanHtml(car)\n    });\n    carsCopy.forEach(car =>{\n        resultSorted += cleanHtml(car)\n    });\n\n    showResult.innerHTML = \"<br>\"+\n    \"The object : \" + resultOriginal\n    + \"</br>\" + \"In alphabetical order: \" +\n    resultSorted;\n}"
        }  
    ],
    "arrayIterationMethods": [
        {
            "arrForEachFunctionId": "// JavaScript code here\n\nfunction arrForEach() {\n    const data = document.getElementById(\"arrForEachValueId\").value;\n    const showResult = document.getElementById(\"arrForEachIdResult\");\n    let arr =  [27, 28, 30, 40, 42, 35, 30];\n    let result = \"\";\n\n    arr.forEach((element, index) => {\n        result += ` The index ${index} is : ${element} </br> `;\n    })\n    showResult.innerHTML = `</br> ${result}. `\n}"
        },
        {
            "arrMapFunctionId": "// JavaScript code here\n\nfunction arrMap() {\n    const data = document.getElementById(\"arrMapValueId\").value;\n    const showResult = document.getElementById(\"arrMapIdResult\");\n    let arr =  [45, 4, 9, 16, 25];\n    \n    const multiply = (e) => e * 2;\n    let result = arr.map(multiply);\n   \n    showResult.innerHTML = ` The array element multiply by 2 </br> ${result}. `\n}"
        },
        {
            "arrflatMapFunctionId": "// JavaScript code here\n\nfunction arrflatMap() {\n    const data = document.getElementById(\"arrflatMapValueId\").value;\n    const showResult = document.getElementById(\"arrflatMapIdResult\");\n    let arr =  [45, 4, [9, 16], 25];\n    let result ;\n    let multiply = data;\n    if(Number(data)){\n        const multiplyFunction = (e) => Array.isArray(e) ? e.map(x => x * multiply) : [e * multiply];\n        result = arr.flatMap(multiplyFunction);\n    }\n    else {\n        result = \"Type a number please\";\n    }\n    \n    showResult.innerHTML = ` The multiply number: ${multiply} .\n    </br> The array flated: ${result}. `\n}"
        },
        {
            "arrFilterFunctionId": "// JavaScript code here\n\nfunction arrFilter() {\n    const data = document.getElementById(\"arrFilterValueId\").value;\n    const showResult = document.getElementById(\"arrFilterIdResult\");\n    let arr =  [45, 4, 9, 16, 25];\n    let result ;\n    if(Number(data)){\n         result = arr.filter((e) => e > data);\n    }\n    else {\n        result = \"Type a number please\"\n    }\n    showResult.innerHTML = ` Your number: ${data} .\n    </br> The array filtered with your value: ${result}. `\n}"
        },
        {
            "arrReduceFunctionId": "// JavaScript code here\n\nfunction arrReduce() {\n    const data = document.getElementById(\"arrReduceValueId\").value;\n    const showResult = document.getElementById(\"arrReduceIdResult\");\n    let arr =  [45, 4, 9, 16, 25];\n    let result ;\n    const addAllElement = (total, element, index, arr) => total + element;\n    result = arr.reduce(addAllElement, 0);\n\n    showResult.innerHTML = ` The array: ${arr} .\n    </br> The array with all added value: ${result}. `\n}"
        },
        {
            "arrReduceRightFunctionId": "// JavaScript code here\n\nfunction arrReduceRight() {\n    const data = document.getElementById(\"arrReduceRightValueId\").value;\n    const showResult = document.getElementById(\"arrReduceRightIdResult\");\n    let arr =  [45, 4, 9, 16, 25];\n    let result;\n    const addAllElement = (total, element, index, arr) => total + element;\n    result = arr.reduceRight(addAllElement, 0);\n\n    showResult.innerHTML = ` The array: ${arr} .\n    </br> The array with all added value: ${result}. `\n}"
        },
        {
            "arrEveryFunctionId": "// JavaScript code here\n\nfunction arrEvery() {\n    const data = document.getElementById(\"arrEveryValueId\").value;\n    const showResult = document.getElementById(\"arrEveryIdResult\");\n    let arr =  [45, 4, 9, 16, 25];\n    let result ;\n    const addAllElement = (element, index, arr) => element < data;\n    result = arr.reduceRight(addAllElement);\n    if(Number(data)) {\n        result = arr.every(addAllElement);\n    }\n    else {\n        result = 'Type a number please.';\n    }\n    showResult.innerHTML = ` Your value: ${data} . </br>\n    The array: ${arr} .</br>\n    </br> Is the entered value greater than ALL values in the array?  ${result}. `\n}"
        },
        {
            "arrSomeFunctionId": "// JavaScript code here\n\nfunction arrSome() {\n    const data = document.getElementById(\"arrSomeValueId\").value;\n    const showResult = document.getElementById(\"arrSomeIdResult\");\n    let arr =  [45, 4, 9, 16, 25];\n    let result ;\n    const addAllElement = (element, index, arr) => element < data;\n    result = arr.reduceRight(addAllElement);\n    if(Number(data)) {\n        result = arr.some(addAllElement);\n    }\n    else {\n        result = 'Type a number please.';\n    }\n    showResult.innerHTML = ` Your value: ${data} . </br>\n    The array: ${arr} .</br>\n    </br> Is the entered value greater than A values in the array?  ${result}. `\n}"
        },
        {
            "arrArrayFromFunctionId": "// JavaScript code here\n\nfunction arrArrayFrom() {\n    const data = document.getElementById(\"arrArrayFromValueId\").value;\n    const showResult = document.getElementById(\"arrArrayFromIdResult\");\n    let arr =  [\"3\", \"AM\", \"THE\", \"REAL\", \"ONE\"];\n    let result = Array.from(arr);\n\n    showResult.innerHTML = ` The array: [${arr}] .\n    </br> The copy : [${result}]. `\n}"
        },
        {
            "arrKeyFunctionId": "// JavaScript code here\n\nfunction arrKey() {\n    const data = document.getElementById(\"arrKeyValueId\").value;\n    const showResult = document.getElementById(\"arrKeyIdResult\");\n    let arr =  [45, 4, 9, 16, 25];\n    let result  = \"\";\n    let keys = arr.keys();\n    for(let x of keys){\n        result += ` The key :${x}. The Value: ${arr[x]} </br> `;\n    };\n    \n    showResult.innerHTML = ` The array: ${arr} .\n    </br> The  array converted to object: </br> ${result}. `\n}"
        },
        {
            "arrEntriesFunctionId": "// JavaScript code here\n\nfunction arrEntries() {\n    const data = document.getElementById(\"arrEntriesValueId\").value;\n    const showResult = document.getElementById(\"arrEntriesIdResult\");\n    let arr =  [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\n    let result  = \"\";\n    let fruits = arr.entries();\n    for(let [index, value] of fruits){\n        result += ` The key and value [${index}, ${value}].</br> `;\n    };\n\n    showResult.innerHTML = ` The array: [${arr}] .\n    </br> How array.entries displays and stores results : </br> ${result}. `\n}"
        },
        {
            "arrWithFunctionId": "// JavaScript code here\n\nfunction arrWith() {\n    const data = document.getElementById(\"arrWithValueId\").value;\n    const showResult = document.getElementById(\"arrWithIdResult\");\n    let arr =  [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\n    let result = arr.with(1, data);\n\n    showResult.innerHTML = ` The array: [${arr}] .\n    </br> How array.entries displays and stores results [${result}] . `\n}"
        },
        {
            "arrSpreadFunctionId": "// JavaScript code here\n\nfunction arrSpread() {\n    const data = document.getElementById(\"arrSpreadValueId\").value;\n    const showResult = document.getElementById(\"arrSpreadIdResult\");\n    let arr =  [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\n    let result = [...arr, data];\n    \n    showResult.innerHTML = ` The array: [${arr}] .\n    </br> Copy of the array with your value in the end: [${result}] . `\n}"
        }
    ]
}