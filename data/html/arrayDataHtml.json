{
    "array":[
        {
            "title": "Create a array",
            "subtitle": "",
            "paragraph":"An array is a special variable, which can hold more than one value:",
            "inputValueId": "arrayCreateValueId",
            "onclickFonctionToCall": "arrayCreate",
            "outputResultId": "arrayCreateIdResult",
            "idToMarkCodeArea": "arrayCreateFunctionId"
        },
        {
            "title": "Using the JavaScript Keyword new",
            "subtitle": "",
            "paragraph":"The following example also creates an Array with the keyword new, and assigns values to it:",
            "inputValueId": "arrayNewValueId",
            "onclickFonctionToCall": "arrarrayNewayCreate",
            "outputResultId": "arrayNewIdResult",
            "idToMarkCodeArea": "arrayNewFunctionId"
        }

    ],
    "arrayMethods":[
        {
            "title": "Array length",
            "subtitle": "",
            "paragraph":"The length property returns the length (size) of an array:",
            "inputValueId": "arrMethodsLengthValueId",
            "onclickFonctionToCall": "arrMethodsLength",
            "outputResultId": "arrMethodsLengthIdResult",
            "idToMarkCodeArea": "arrMethodsLengthFunctionId"
        },
        {
            "title": "Array toString",
            "subtitle": "",
            "paragraph":"The JavaScript method toString() converts an array to a string of (comma separated) array values.",
            "inputValueId": "arrMethodsToStringValueId",
            "onclickFonctionToCall": "arrMethodsToString",
            "outputResultId": "arrMethodsToStringIdResult",
            "idToMarkCodeArea": "arrMethodsToStringFunctionId"
        },
        {
            "title": "Array join",
            "subtitle": "The join() method also joins all array elements into a string.",
            "paragraph":"It behaves just like toString(), but in addition you can specify the separator. the arr: [cacao, banane, lait, vanille]",
            "inputValueId": "arrMethodsJoinValueId",
            "onclickFonctionToCall": "arrMethodsJoin",
            "outputResultId": "arrMethodsJoinIdResult",
            "idToMarkCodeArea": "arrMethodsJoinFunctionId"
        },
        {
            "title": "Array pop",
            "subtitle": "The join() method also joins all array elements into a string.",
            "paragraph":"It behaves just like toString(), but in addition you can specify the separator. The arr: [cacao, banane, lait, vanille]",
            "hiddenInput": "true",
            "inputValueId": "arrMethodsPopValueId",
            "onclickFonctionToCall": "arrMethodsPop",
            "outputResultId": "arrMethodsPopIdResult",
            "idToMarkCodeArea": "arrMethodsPopFunctionId"
        },
        {
            "title": "Array push",
            "subtitle": "",
            "paragraph":"The push() method adds a new element to an array (at the end): The arr: [cacao, banane, lait, vanille]",
            "inputValueId": "arrMethodsPushValueId",
            "onclickFonctionToCall": "arrMethodsPush",
            "outputResultId": "arrMethodsPushIdResult",
            "idToMarkCodeArea": "arrMethodsPushFunctionId"
        },
        {
            "title": "Array shift",
            "subtitle": "",
            "paragraph":"The shift() method removes the first array element and 'shifts' all other elements to a lower index. The arr: [cacao, banane, lait, vanille]",
            "hiddenInput": "true",
            "inputValueId": "arrMethodsShiftValueId",
            "onclickFonctionToCall": "arrMethodsShift",
            "outputResultId": "arrMethodsShiftIdResult",
            "idToMarkCodeArea": "arrMethodsShiftFunctionId"
        },
        {
            "title": "Array unshift",
            "subtitle": "The unshift() method adds a new element to an array (at the beginning), and 'unshifts' older elements:",
            "paragraph":"Type the element to add:",
            "inputValueId": "arrMethodsUnShiftValueId",
            "onclickFonctionToCall": "arrMethodsUnShift",
            "outputResultId": "arrMethodsUnShiftIdResult",
            "idToMarkCodeArea": "arrMethodsUnShiftFunctionId"
        },
        {
            "title": "Array concat",
            "subtitle": "The concat() method does not change the existing arrays. It always returns a new array and can take any number of arr arguments.",
            "paragraph":"Type the element to add:",
            "inputValueId": "arrMethodsConcatValueId",
            "onclickFonctionToCall": "arrMethodsConcat",
            "outputResultId": "arrMethodsConcatIdResult",
            "idToMarkCodeArea": "arrMethodsConcatFunctionId"
        },
        {
            "title": "Array copyWithin",
            "subtitle": "The copyWithin() method copies array elements to another position in an array, can take as second argument the length of the copy.",
            "paragraph":"Type the number(only one number) to chose to copy(contained in the arr length), the index of the copy is : 0. The arr: [cacao, banane, lait, vanille]:",
            "inputValueId": "arrMethodscopyWithinValueId",
            "onclickFonctionToCall": "arrMethodscopyWithin",
            "outputResultId": "arrMethodscopyWithinIdResult",
            "idToMarkCodeArea": "arrMethodscopyWithinFunctionId"
        },
        {
            "title": "Array Array flat",
            "subtitle": "The flat() method creates a new array with sub-array elements concatenated to a specified depth.(change multiple arr into one, at one level)",
            "paragraph":"Type the number(only one number) to chose to copy(contained in the arr length), the index of the copy is : 0. The arr: [cacao, banane, lait, vanille]:",
            "hiddenInput": "true",
            "inputValueId": "arrMethodArrayflatValueId",
            "onclickFonctionToCall": "arrMethodArrayflat",
            "outputResultId": "arrMethodArrayflatIdResult",
            "idToMarkCodeArea": "arrMethodArrayflatFunctionId"
        },
        {
            "title": "Array Array splice",
            "subtitle": "The splice() method can be used to add new items to an array or remove them (modify the original array):",
            "paragraph":"The first parameter (2) defines the position where new elements should be added and the second how many element to remove. The rest of parameter define the element to add, if empty it's just remove element. </br> Type the element to add:",
            "inputValueId": "arrMethodsSpliceValueId",
            "onclickFonctionToCall": "arrMethodsSplice",
            "outputResultId": "arrMethodsSpliceIdResult",
            "idToMarkCodeArea": "arrMethodsSpliceFunctionId"
        },
        {
            "title": "Array Array toSpliced",
            "subtitle": "ES2023 added the Array toSpliced() method as a safe way to splice an array without altering the original array.",
            "paragraph":"Same ad splice() but create a new array, and don't save the data removed like splice(). Keeping the original array unchanged",
            "inputValueId": "arrMethodsToSplicedValueId",
            "onclickFonctionToCall": "arrMethodsToSpliced",
            "outputResultId": "arrMethodsToSplicedIdResult",
            "idToMarkCodeArea": "arrMethodsToSplicedFunctionId"
        },
        {
            "title": "Array Array Array slice",
            "subtitle": "The slice() method slices out a piece of an array into a new array:",
            "paragraph":"The slice() method can take two arguments, the start argument, and up to (but not including) the end argument.</br> The arr: [cacao, banane, lait, vanille]:",
            "inputValueId": "arrMethodsSliceValueId",
            "onclickFonctionToCall": "arrMethodsSlice",
            "outputResultId": "arrMethodsSliceIdResult",
            "idToMarkCodeArea": "arrMethodsSliceFunctionId"
        }

    ],
    "arraySearchMethods": [
        {
            "title": "Array indexOf",
            "subtitle": "The indexOf() method searches an array for an element value and returns its position.",
            "paragraph":"Type the element you want to find the index in this array: [Apple, Orange, Apple, Mango]. </br> (Good to know: array.indexOf(item, start)).",
            "inputValueId": "arrMethodsIndexOfValueId",
            "onclickFonctionToCall": "arrMethodsIndexOf",
            "outputResultId": "arrMethodsIndexOfIdResult",
            "idToMarkCodeArea": "arrMethodsIndexOfFunctionId"
        },
        {
            "title": "Array lastIndexOf",
            "subtitle": "Array.lastIndexOf() is the same as Array.indexOf(), but returns the position of the last occurrence of the specified element.",
            "paragraph":"Type the element you want to find the index in this array: [Apple, Orange, Apple, Mango, Orange]. </br> (Good to know: array.lastIndexOf(item, start)).",
            "inputValueId": "arrMethodslastIndexOfValueId",
            "onclickFonctionToCall": "arrMethodslastIndexOf",
            "outputResultId": "arrMethodslastIndexOfIdResult",
            "idToMarkCodeArea": "arrMethodslastIndexOfFunctionId"
        },
        {
            "title": "Array includes",
            "subtitle": "ECMAScript 2016 introduced Array.includes() to arrays. This allows us to check if an element is present in an array (including NaN, unlike indexOf).",
            "paragraph":"Type the element you want to find and you will know if it present: [Apple, Orange, Apple, Mango, Orange]. </br> (Good to know: array.lastIndexOf(item, start)).",
            "inputValueId": "arrMethodsIncludesValueId",
            "onclickFonctionToCall": "arrMethodsIncludes",
            "outputResultId": "arrMethodsIncludesIdResult",
            "idToMarkCodeArea": "arrMethodsIncludesFunctionId"
        },
        {
            "title": "Array find",
            "subtitle": "The find() method returns the value of the first array element that passes a test function.",
            "paragraph":"In this example we search for a numbers greater than the specified number. This is the array: [4, 9, 16, 25, 29]. </br> (Good to know: this function can take 3 argument(value, index, array)). ",
            "inputValueId": "arrMethodsFindValueId",
            "onclickFonctionToCall": "arrMethodsFind",
            "outputResultId": "arrMethodsFindIdResult",
            "idToMarkCodeArea": "arrMethodsFindFunctionId"
        },
        {
            "title": "Array findIndex",
            "subtitle": "The findIndex() method returns the index of the first array element that passes a test function.",
            "paragraph":"In this example we search for index of a numbers greater than the specified number. This is the array: [4, 9, 16, 25, 29]. </br> (Good to know: this function can take 3 argument(value, index, array)). ",
            "inputValueId": "arrMethodsfindIndexValueId",
            "onclickFonctionToCall": "arrMethodsfindIndex",
            "outputResultId": "arrMethodsfindIndexIdResult",
            "idToMarkCodeArea": "arrMethodsfindIndexFunctionId"
        },
        {
            "title": "Array indLast",
            "subtitle": "ES2023 added the findLast() method that will start from the end of an array and return the value of the first element that satisfies a condition.",
            "paragraph":"In this example we search a numbers greater than the specified number. This is the array: [27, 28, 30, 40, 42, 35, 30]. </br> (Good to know: this function can take 3 argument(value, index, array)). ",
            "inputValueId": "arrMethodsindLastValueId",
            "onclickFonctionToCall": "arrMethodsindLast",
            "outputResultId": "arrMethodsindLastIdResult",
            "idToMarkCodeArea": "arrMethodsindLastFunctionId"
        },
        {
            "title": "Array indLastIndex",
            "subtitle": "ES2023 added the findLast() method that will start from the end of an array and return the value of the first element that satisfies a condition.",
            "paragraph":"In this example we search for index of a numbers greater than the specified number. This is the array: [27, 28, 30, 40, 42, 35, 30]. </br> (Good to know: this function can take 3 argument(value, index, array)). ",
            "inputValueId": "arrMethodsindLastIndexValueId",
            "onclickFonctionToCall": "arrMethodsindLastIndex",
            "outputResultId": "arrMethodsindLastIndexIdResult",
            "idToMarkCodeArea": "arrMethodsindLastIndexFunctionId"
        }
    ],
    "arraySortMethods": [
        {
            "title": "Array Sort",
            "subtitle": "The sort() method sorts an array alphabetically:",
            "paragraph":"Type the element you want to add to the array and be sorted. The array is: [Apple, Orange, Apple, Mango].",
            "inputValueId": "arrMethodsSortValueId",
            "onclickFonctionToCall": "arrMethodsSort",
            "outputResultId": "arrMethodsSortIdResult",
            "idToMarkCodeArea": "arrMethodsSortFunctionId"
        },
        {
            "title": "Array Reverse",
            "subtitle": "The sort() method sorts an array alphabetically:",
            "paragraph":"Type the element you want to add to the array and be sorted. The array is: [Apple, Orange, Apple, Mango].",
            "inputValueId": "arrMethodsReverseValueId",
            "onclickFonctionToCall": "arrMethodsReverse",
            "outputResultId": "arrMethodsReverseIdResult",
            "idToMarkCodeArea": "arrMethodsReverseId"
        }
    ]
}