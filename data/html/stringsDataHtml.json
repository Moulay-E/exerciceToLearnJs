{
    "algorithme":[],
    "string":[
        {
            "title": "String Length",
            "subtitle": "",
            "paragraph":"The length property returns the length of a string:",
            "inputValueId": "stringSize",
            "onclickFonctionToCall": "stringLength",
            "outputResultId": "stringSizeResult",
            "idToMarkCodeArea": "lengthFunctionId"
        },
        {
            "title": "String charCodeAt, At()",
            "subtitle": "There are 4 methods for extracting string characters:",
            "paragraph":"The at(position) Method.</br> The charAt(position) Method.</br> The charCodeAt(position) Method. </br> Using property access [] like in arrays but a little unpredictable",
            "inputValueId": "characterInString",
            "onclickFonctionToCall": "findCharacterInString",
            "outputResultId": "characterInStringResult",
            "idToMarkCodeArea": "findCharacterInStringFunctionId"
        },
        {
            "title": "String slice, substring , substr",
            "subtitle": "There are 3 methods for extracting a part of a string:",
            "paragraph":"slice(start, end)</br>substring(start, end)</br>substr(start, length)",
            "inputValueId": "extractStringPartId",
            "onclickFonctionToCall": "extractingStringPart",
            "outputResultId": "extractStringPartIdResult",
            "idToMarkCodeArea": "extractingStringPartFunctionId"
        },
        {
            "title": "String toUpper, toLower and concat",
            "subtitle": "",
            "paragraph":"A string is converted to upper case with toUpperCase(): </br> A string is converted to lower case with toLowerCase(): </br> concat() joins two or more strings:",
            "inputValueId": "upperAndLowerCaseValueId",
            "onclickFonctionToCall": "upperAndLowerCase",
            "outputResultId": "upperAndLowerCaseIdResult",
            "idToMarkCodeArea": "upperAndLowerCaseFunctionId"
        },
        {
            "title": "String all trim methods",
            "subtitle": "",
            "paragraph":"The trim() method removes whitespace from both sides of a string:",
            "inputValueId": "allTrimMethodsValueId",
            "onclickFonctionToCall": "allTrimMethods",
            "outputResultId": "allTrimMethodsIdResult",
            "idToMarkCodeArea": "allTrimMethodsFunctionId"
        },
        {
            "title": "String all pads methods",
            "subtitle": "",
            "paragraph":"It pads a string with another string (multiple times) until it reaches a given length.",
            "inputValueId": "allPadMethodsValueId",
            "onclickFonctionToCall": "allPadMethods",
            "outputResultId": "allPadMethodsIdResult",
            "idToMarkCodeArea": "allPadMethodsFunctionId"
        },
        {
            "title": "String repeat methods",
            "subtitle": "",
            "paragraph":"The repeat() method returns a string with a number of copies of a string.</br>The repeat() method returns a new string.</br>The repeat() method does not change the original string.",
            "inputValueId": "repeatStringValueId",
            "onclickFonctionToCall": "repeatString",
            "outputResultId": "repeatStringIdResult",
            "idToMarkCodeArea": "repeatStringFunctionId"
        },
        {
            "title": "String replace methods",
            "subtitle": "",
            "paragraph":"The replace() method replaces a specified value with another value in a string:",
            "inputValueId": "replaceStringValueId",
            "onclickFonctionToCall": "replaceString",
            "outputResultId": "replaceStringIdResult",
            "idToMarkCodeArea": "replaceStringFunctionId"
        },
        {
            "title": "String split methods",
            "subtitle": "",
            "paragraph":"A string can be converted to an array with the split() method:",
            "inputValueId": "splitStringValueId",
            "onclickFonctionToCall": "splitString",
            "outputResultId": "splitStringIdResult",
            "idToMarkCodeArea": "splitStringFunctionId"
        }

    ],
    "stringSearch": [
        {
            "title": "String indexOf methods",
            "subtitle": "lastIndexOf can take a second argument",
            "paragraph":"The indexOf() method returns the index (position) of the first occurrence of a string in a string, or it returns -1 if the string is not found, exemple in this text: Please locate where 'locate' occurs! ",
            "inputValueId": "indexOfStringValueId",
            "onclickFonctionToCall": "stringIndexOf",
            "outputResultId": "indexOfStringIdResult",
            "idToMarkCodeArea": "indexOfStringFunctionId"
        },
        {
            "title": "String  lastIndexOf methods",
            "subtitle": "lastIndexOf can take a second argument",
            "paragraph":"The lastIndexOf() method returns the index of the last occurrence of a specified text in a string, in this exeample : Please locate where 'locate' occurs!",
            "inputValueId": "stringLastIndexOfValueId",
            "onclickFonctionToCall": "stringLastIndexOf",
            "outputResultId": "stringLastIndexOfIdResult",
            "idToMarkCodeArea": "stringLastIndexOfFunctionId"
        },
        {
            "title": "String  stringSearch methods",
            "subtitle": "can take regular expression",
            "paragraph":"The search() method searches a string for a string (or a regular expression) and returns the position of the match, in this exeample : Please locate where 'locate' occurs!",
            "inputValueId": "stringSearchValueId",
            "onclickFonctionToCall": "stringSearch",
            "outputResultId": "stringSearchIdResult",
            "idToMarkCodeArea": "stringSearchFunctionId"
        },
        {
            "title": "String  stringMatch methods",
            "subtitle": "accept regex, to search globaly",
            "paragraph":"The match() method returns an array containing the results of matching a string against a string (or a regular expression)., in this exeample : The rain in SPAIN stays mainly in the plain",
            "inputValueId": "stringMatchValueId",
            "onclickFonctionToCall": "stringMatch",
            "outputResultId": "stringMatchIdResult",
            "idToMarkCodeArea": "stringMatchFunctionId"
        },
        {
            "title": "String  stringMatchAll methods",
            "subtitle": "need to be converted to array (array.from)",
            "paragraph":"The matchAll() method returns an object iterator containing the results of matching a string against a string (or a regular expression). in this exeample : I love cats. Cats are very easy to love. Cats are very popular.",
            "inputValueId": "stringMatchAllValueId",
            "onclickFonctionToCall": "stringMatchAll",
            "outputResultId": "stringMatchAllIdResult",
            "idToMarkCodeArea": "stringMatchAllFunctionId"
        },
        {
            "title": "String  stringIncludes methods",
            "subtitle": "can take a second argument for start, is sensitive case, is not supported on IE",
            "paragraph":"The includes() method returns true if a string contains a specified value. Otherwise it returns false. in this exeample : Hello world, welcome to the universe.",
            "inputValueId": "stringIncludesValueId",
            "onclickFonctionToCall": "stringIncludes",
            "outputResultId": "stringIncludesIdResult",
            "idToMarkCodeArea": "stringIncludesFunctionId"
        },
        {
            "title": "String  startsWith methods",
            "subtitle": "can take a second argument for start, is sensitive case, is not supported on IE",
            "paragraph":"The startsWith() method returns true if a string begins with a specified value. Otherwise it returns false. in this exeample : Hello world, welcome to the universe.",
            "inputValueId": "stringStartsWithValueId",
            "onclickFonctionToCall": "stringStartsWith",
            "outputResultId": "stringStartsWithIdResult",
            "idToMarkCodeArea": "stringStartsWithFunctionId"
        },
        {
            "title": "String  endsWith() methods",
            "subtitle": "can take a second argument to check from the start if the characters end with the selected value int he area of the argument, is sensitive case, is not supported on IE",
            "paragraph":"The endsWith() method returns true if a string ends with a specified value. Otherwise it returns false. in this exeample : Hello world, welcome to the universe.",
            "inputValueId": "stringEndsWithValueId",
            "onclickFonctionToCall": "stringEndsWith",
            "outputResultId": "stringEndsWithIdResult",
            "idToMarkCodeArea": "stringEndsWithFunctionId"
        }
    ]
}